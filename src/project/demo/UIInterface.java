/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project.demo;

import java.awt.Color;
import javax.swing.*;   
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.text.*;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
* To initialize the UI, and make interoperation with the functions class 
*
* @author Yitian Huang
* @verison 1.0 
* @since SEP 3,2015
* 
*/
public class UIInterface extends javax.swing.JFrame {

    /**
     * Creates new form UIInterface
     */
    public UIInterface() {
        initComponents();
   
        
        //initialization
        insCommonResources = new CommonResources();
        insDecodeInstructions = new EncodeInstructions();
        insExecuteInstructions = new ExecuteInstructions();
        
        CommonStr = new String();
        //set a instance point the let the function class operate the UI.      
        insCommonResources.GUI = this;
       
        CommonBuffer = new ArrayList();
       
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    /**
     * @param args the command line arguments
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField22 = new javax.swing.JTextField();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        jTextField1 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jPanel2 = new javax.swing.JPanel();
        jTextField11 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jTextField17 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jTextField18 = new javax.swing.JTextField();
        jTextField13 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextField19 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextField14 = new javax.swing.JTextField();
        jTextField12 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLayeredPane4 = new javax.swing.JLayeredPane();
        jButton2 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton18 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField20 = new javax.swing.JTextField();
        jTextField21 = new javax.swing.JTextField();
        jTextField23 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jTextField24 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jTextField25 = new javax.swing.JTextField();
        jLayeredPane5 = new javax.swing.JLayeredPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jTextField6 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jButton10 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jButton19 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        label1 = new java.awt.Label();

        jTextField22.setText("0");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton6.setText("Enter");
        jButton6.setEnabled(false);
        jButton6.setSelected(true);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jTextPane1.setEditable(false);
        jTextPane1.setBackground(new java.awt.Color(0, 128, 128));
        jTextPane1.setFont(new java.awt.Font("微软雅黑", 0, 12)); // NOI18N
        jTextPane1.setToolTipText("");
        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout jLayeredPane3Layout = new javax.swing.GroupLayout(jLayeredPane3);
        jLayeredPane3.setLayout(jLayeredPane3Layout);
        jLayeredPane3Layout.setHorizontalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jLayeredPane3Layout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE))))
        );
        jLayeredPane3Layout.setVerticalGroup(
            jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(18, 18, 18)
                .addGroup(jLayeredPane3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton6))
                .addGap(19, 19, 19))
        );

        jLayeredPane3Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jButton6, jTextField1});

        jLayeredPane3.setLayer(jTextField1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jButton6, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane3.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jTextField11.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField11.setEnabled(false);
        jTextField11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField11ActionPerformed(evt);
            }
        });

        jTextField16.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField16.setEnabled(false);

        jLabel12.setText("MSR");

        jTextField17.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField17.setEnabled(false);

        jLabel13.setText("MFR");

        jTextField18.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField18.setEnabled(false);
        jTextField18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField18ActionPerformed(evt);
            }
        });

        jTextField13.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField13.setEnabled(false);

        jLabel1.setText("R0");

        jTextField5.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField5.setEnabled(false);

        jLabel5.setText("X1");

        jTextField15.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField15.setEnabled(false);

        jLabel3.setText("R2");

        jTextField2.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField2.setEnabled(false);

        jTextField10.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField10.setEnabled(false);

        jLabel9.setText("IR");

        jTextField4.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField4.setEnabled(false);
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jLabel4.setText("R3");

        jLabel10.setText("MAR");

        jTextField19.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField19.setEnabled(false);

        jLabel8.setFont(new java.awt.Font("宋体", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(204, 0, 0));
        jLabel8.setText("PC");

        jTextField3.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTextField3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField3.setEnabled(false);
        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        jLabel14.setText("IOR");

        jTextField14.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField14.setEnabled(false);

        jTextField12.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField12.setEnabled(false);

        jLabel11.setText("MBR");

        jLabel6.setText("X2");

        jLabel2.setText("R1");

        jLabel7.setText("X3");

        jButton2.setFont(new java.awt.Font("微软雅黑", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 0, 0));
        jButton2.setText("HALT");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton7.setText("Refresh");
        jButton7.setEnabled(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton3.setText("Encode");
        jButton3.setEnabled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton5.setText("Show Storage");
        jButton5.setEnabled(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("微软雅黑", 1, 24)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 0, 0));
        jButton9.setText("POWER");
        jButton9.setToolTipText("");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        jButton18.setText("IPL");
        jButton18.setEnabled(false);
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        jButton8.setText("Reset");
        jButton8.setEnabled(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton4.setText("Execute");
        jButton4.setEnabled(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton11.setText("Single Step");
        jButton11.setEnabled(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jLayeredPane4Layout = new javax.swing.GroupLayout(jLayeredPane4);
        jLayeredPane4.setLayout(jLayeredPane4Layout);
        jLayeredPane4Layout.setHorizontalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jLayeredPane4Layout.createSequentialGroup()
                        .addGroup(jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jLayeredPane4Layout.setVerticalGroup(
            jLayeredPane4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane4Layout.createSequentialGroup()
                .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(11, 11, 11)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jLayeredPane4.setLayer(jButton2, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jButton7, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jButton3, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jButton5, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jButton9, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jButton18, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jButton8, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jButton4, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jLayeredPane4.setLayer(jButton11, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jLabel21.setText("CC");

        jLabel22.setText("RSR");

        jLabel23.setText("IAR");

        jLabel24.setText("IRR");

        jTextField9.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField9.setEnabled(false);

        jTextField20.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField20.setEnabled(false);

        jTextField21.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField21.setEnabled(false);

        jTextField23.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField23.setEnabled(false);

        jLabel25.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        jLabel25.setForeground(new java.awt.Color(255, 0, 0));
        jLabel25.setText("FR0");

        jTextField24.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField24.setEnabled(false);

        jLabel26.setFont(new java.awt.Font("微软雅黑", 1, 14)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(255, 0, 0));
        jLabel26.setText("FR1");

        jTextField25.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextField25.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextField19, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(18, 18, 18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addGap(40, 40, 40))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel22)
                                    .addComponent(jLabel24))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField23)
                            .addComponent(jTextField21)
                            .addComponent(jTextField20)
                            .addComponent(jTextField2, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField10, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField11, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField12, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField13, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField14, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField15, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField5, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                            .addComponent(jTextField17, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField18, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jTextField9)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jTextField16, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel26)
                            .addComponent(jLabel25))
                        .addGap(31, 31, 31)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField24)
                            .addComponent(jTextField25))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLayeredPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jTextField10, jTextField11, jTextField12, jTextField13, jTextField14, jTextField15, jTextField16, jTextField17, jTextField18, jTextField19, jTextField2, jTextField3, jTextField4, jTextField5});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField2))
                .addGap(9, 9, 9)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jTextField10))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(jTextField20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(jTextField21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel24)
                    .addComponent(jTextField23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jTextField24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jTextField25, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
            .addComponent(jLayeredPane4, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jLayeredPane5.setEnabled(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel15.setText("Set Units here(use decimal)");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "R0", "R1", "R2", "R3", "PC", "X1", "X2", "X3" }));
        jComboBox1.setEnabled(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jTextField6.setEnabled(false);
        jTextField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField6ActionPerformed(evt);
            }
        });

        jButton1.setText("SET");
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel16.setText("Set Memory here");

        jLabel17.setText("Set");

        jLabel18.setText("To");

        jLabel19.setText("Set Memory to");

        jTextField7.setEnabled(false);

        jLabel20.setText("In location of");

        jTextField8.setEnabled(false);

        jButton10.setText("SET");
        jButton10.setEnabled(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel19, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jTextField7))
                        .addGap(0, 13, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel17)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel18)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTextField6)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jLayeredPane5Layout = new javax.swing.GroupLayout(jLayeredPane5);
        jLayeredPane5.setLayout(jLayeredPane5Layout);
        jLayeredPane5Layout.setHorizontalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane5Layout.setVerticalGroup(
            jLayeredPane5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jLayeredPane5.setLayer(jPanel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton19.setText("Load Program");
        jButton19.setEnabled(false);
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jTextPane2.setEditable(false);
        jTextPane2.setBackground(new java.awt.Color(0, 128, 128));
        jScrollPane2.setViewportView(jTextPane2);

        label1.setText("Printer");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(8, 8, 8)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLayeredPane3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLayeredPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane3)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLayeredPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
 
    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        AddContectToPane("WELCOME!\n", Color.WHITE, true, 14);
        AddContectToPane("Please Load the initialization program by Click the IPL button.\n", Color.WHITE, true, 12);
       jButton18.setEnabled(true);
       jButton9.setEnabled(false);
        
        
        

    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here
        //Thread mthread = new Thread ( new Runnable() {
        //    public void run() {
                
                insExecuteInstructions.Execute(insCommonResources,false);
                jButton7.doClick();
        //    }
       // });
        
      //  mthread.setPriority(10);
      //  mthread.start();
           
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        ShowStorge();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here
        new Thread ( new Runnable() {
            public void run() {
                insDecodeInstructions.EncodeOpcode(CommonBuffer, insCommonResources);
                jButton7.doClick();
            }
        }).start();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        jTextField3.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.R0),insCommonResources.R0.length));
        jTextField2.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.R1),insCommonResources.R1.length));
        jTextField4.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.R2),insCommonResources.R2.length));
        jTextField5.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.R3),insCommonResources.R3.length));
        jTextField10.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.X1),insCommonResources.X1.length));
        jTextField11.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.X2),insCommonResources.X2.length));
        jTextField12.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.X3),insCommonResources.X3.length));
        jTextField13.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.PC),insCommonResources.PC.length));
        jTextField14.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.IR),insCommonResources.IR.length));
        jTextField15.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.MAR),insCommonResources.MAR.length));
        jTextField16.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.MBR),insCommonResources.MBR.length));
        jTextField17.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.MSR),insCommonResources.MSR.length));
        jTextField18.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.MFR),insCommonResources.MFR.length));
        jTextField19.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.IOR),insCommonResources.IOR.length));
        jTextField9.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.CC),insCommonResources.CC.length));
        jTextField20.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.RSR),insCommonResources.RSR.length));
        jTextField21.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.IAR),insCommonResources.IAR.length));
        jTextField23.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.IRR),insCommonResources.IRR.length));
        jTextField24.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.FR0),insCommonResources.FR0.length));
        jTextField25.setText(insCommonResources.VerifyMachineString(insCommonResources.setByteToString(insCommonResources.FR1),insCommonResources.FR1.length));

    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(1);
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        // TODO add your handling code here:
        JFileChooser fileChooser = new JFileChooser(".");
        fileChooser.showOpenDialog(null);
        String description = new String();
        int line = 0;
        
        //Read from file
        File insFile =  fileChooser.getSelectedFile();
        BufferedReader reader = null;
        try {
            reader = new BufferedReader(new FileReader(insFile));
            String tempString = null;
            
            while ((tempString = reader.readLine()) != null) {
                line++;
                if ( tempString.startsWith("--") || tempString.isEmpty()) {
                    //Nothing
                }
                else if (tempString.startsWith("**")) {
                    tempString = tempString.substring(3, tempString.length());
                    description += tempString;
                    description += "\n";
                }
                else {
                    System.out.println("line " + line + ":" + tempString);
                    
                    String pattern = "[a-zA-Z]{2,5} [\\d,]*[\\d]{1}";
                    Pattern pat = Pattern.compile(pattern);
                    Matcher mat;

                    mat = pat.matcher(tempString);
                    if( mat.matches() == false && !tempString.equalsIgnoreCase("HLT")) {
                        this.AddContectToPaneForERROR("[ReadFile]"+ "The content:["+ tempString + "] in Line[" + line +  "] is not a valid instruction, discard.\n");
                        return;
                    }

                    CommonBuffer.add(tempString);
             
                    
                    
                }
            }
            reader.close();
        } catch (IOException e) {
            e.printStackTrace();
        } finally {
            if (reader != null) {
                try {
                    reader.close();
                } catch (IOException e1) {
                }
            }
        }
        
        this.AddContectToPane("Load program into the simulator successfully.\n");
        ShowCurrentInstructionsList();
        
        if (!description.isEmpty()) {
            this.AddContectToPane("Get the description from the program's author:\n");
            this.AddContectToPane(description);
            this.AddContectToPane("Now you can encode these instructions.\n");
        }
        
       
        
        
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        // TODO add your handling code here:
        /*
        
        int trapRoutineLength = 0;
        int faultRoutineLength = 0;
        byte[] content = new byte[16];
        insCommonResources.PC = insCommonResources.setIntegerToByte(insCommonResources.PC, 1000);
        insCommonResources.setStorge(insCommonResources, insCommonResources.setIntegerToByte(content, 1500 + 16*trapRoutineLength), 40);
        insCommonResources.setStorge(insCommonResources, insCommonResources.setIntegerToByte(content, 1500 + 16*trapRoutineLength + faultRoutineLength), 41);
        */
        insCommonResources.PC = insCommonResources.setIntegerToByte(insCommonResources.PC, 1000);
        AddContectToPane("initialization succeed.\nNow you can type in instruction(s):\n", Color.WHITE, true, 12);
        jButton18.setEnabled(false);
        jButton2.setEnabled(true);
        jButton3.setEnabled(true);
        jButton4.setEnabled(true);
        jButton5.setEnabled(true);
        jButton6.setEnabled(true);
        jButton7.setEnabled(true);
  
        jButton10.setEnabled(true);
        jButton1.setEnabled(true);
        jButton8.setEnabled(true);
        jTextField1.setEnabled(true);
        jTextField6.setEnabled(true);
        jTextField7.setEnabled(true);
        jTextField8.setEnabled(true);
        jButton19.setEnabled(true);
        jButton11.setEnabled(true);
        jComboBox1.setEnabled(true);
        
        //set the default TRAP start address.
        this.insCommonResources.insCache.insMemory.Memory[40] = this.insCommonResources.setIntegerToByte(this.insCommonResources.insCache.insMemory.Memory[40], 1519);
        this.insCommonResources.insCache.insMemory.Memory[41] = this.insCommonResources.setIntegerToByte(this.insCommonResources.insCache.insMemory.Memory[41], 1829);
        
        //routine 1
        this.insCommonResources.insCache.insMemory.Memory[1519] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1519], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1518] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1518], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1517] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1517], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1516] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1516], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1515] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1515], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1514] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1514], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1513] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1513], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1512] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1512], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1511] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1511], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1510] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1510], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1509] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1509], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1508] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1508], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1507] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1507], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1506] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1506], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1505] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1505], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1504] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1504], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1503] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1503], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1502] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1502], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1501] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1501], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1500] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1500], "1111100000000111", 0, 15);        
        
        //routine2
        this.insCommonResources.insCache.insMemory.Memory[1539] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1539], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1538] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1538], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1537] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1537], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1536] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1536], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1535] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1535], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1534] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1534], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1533] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1533], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1532] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1532], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1531] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1531], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1530] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1530], "0001100000000010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1529] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1529], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1528] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1528], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1527] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1527], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1526] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1526], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1525] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1525], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1524] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1524], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1523] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1523], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1522] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1522], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1521] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1521], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1520] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1520], "1111100000000111", 0, 15);        
        
        //routine3
        this.insCommonResources.insCache.insMemory.Memory[1559] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1559], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1558] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1558], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1557] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1557], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1556] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1556], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1555] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1555], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1554] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1554], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1553] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1553], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1552] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1552], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1551] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1551], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1550] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1550], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1549] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1549], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1548] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1548], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1547] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1547], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1546] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1546], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1545] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1545], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1544] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1544], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1543] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1543], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1542] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1542], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1541] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1541], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1540] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1540], "1111100000000111", 0, 15);        
       
        //routine4
        this.insCommonResources.insCache.insMemory.Memory[1579] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1579], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1578] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1578], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1577] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1577], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1576] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1576], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1575] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1575], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1574] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1574], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1573] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1573], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1572] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1572], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1571] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1571], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1570] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1570], "0001100000000100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1569] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1569], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1568] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1568], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1567] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1567], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1566] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1566], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1565] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1565], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1564] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1564], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1563] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1563], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1562] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1562], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1561] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1561], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1560] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1560], "1111100000000111", 0, 15);        
       
        //routine5
        this.insCommonResources.insCache.insMemory.Memory[1599] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1599], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1598] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1598], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1597] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1597], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1596] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1596], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1595] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1595], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1594] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1594], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1593] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1593], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1592] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1592], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1591] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1591], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1590] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1590], "0001100000000101", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1589] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1589], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1588] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1588], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1587] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1587], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1586] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1586], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1585] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1585], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1584] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1584], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1583] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1583], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1582] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1582], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1581] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1581], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1580] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1580], "1111100000000111", 0, 15);        
       
        //routine6
        this.insCommonResources.insCache.insMemory.Memory[1619] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1619], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1618] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1618], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1617] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1617], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1616] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1616], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1615] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1615], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1614] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1614], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1613] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1613], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1612] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1612], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1611] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1611], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1610] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1610], "0001100000000110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1609] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1609], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1608] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1608], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1607] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1607], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1606] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1606], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1605] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1605], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1604] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1604], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1603] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1603], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1602] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1602], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1601] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1601], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1600] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1600], "1111100000000111", 0, 15);        
        
        //routine7
        this.insCommonResources.insCache.insMemory.Memory[1639] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1639], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1638] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1638], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1637] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1637], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1636] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1636], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1635] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1635], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1634] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1634], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1633] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1633], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1632] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1632], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1631] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1631], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1630] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1630], "0001100000000111", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1629] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1629], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1628] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1628], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1627] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1627], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1626] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1626], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1625] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1625], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1624] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1624   ], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1623] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1623], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1622] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1622], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1621] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1621], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1620] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1620], "1111100000000111", 0, 15);        
        
        //routine8
        this.insCommonResources.insCache.insMemory.Memory[1659] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1659], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1658] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1658], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1657] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1657], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1656] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1656], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1655] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1655], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1654] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1654], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1653] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1653], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1652] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1652], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1651] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1651], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1650] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1650], "0001100000001000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1649] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1649], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1648] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1648], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1647] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1647], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1646] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1646], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1645] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1645], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1644] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1644], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1643] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1643], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1642] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1642], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1641] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1641], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1640] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1640], "1111100000000111", 0, 15);        
        
        //routine9
        this.insCommonResources.insCache.insMemory.Memory[1679] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1679], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1678] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1678], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1677] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1677], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1676] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1676], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1675] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1675], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1674] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1674], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1673] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1673], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1672] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1672], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1671] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1671], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1670] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1670], "0001100000001001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1669] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1669], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1668] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1668], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1667] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1667], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1666] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1666], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1665] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1665], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1664] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1664], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1663] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1663], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1662] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1662], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1661] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1661], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1660] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1660], "1111100000000111", 0, 15);        
        
        //routine10
        this.insCommonResources.insCache.insMemory.Memory[1699] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1699], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1698] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1698], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1697] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1697], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1696] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1696], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1695] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1695], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1694] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1694], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1693] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1693], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1692] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1692], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1691] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1691], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1690] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1690], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1689] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1689], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1688] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1688], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1687] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1687], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1686] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1686], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1685] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1685], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1684] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1684], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1683] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1683], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1682] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1682], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1681] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1681], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1680] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1680], "1111100000000111", 0, 15);        
        
        //routine11
        this.insCommonResources.insCache.insMemory.Memory[1719] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1719], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1718] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1718], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1717] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1717], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1716] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1716], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1715] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1715], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1714] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1714], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1713] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1713], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1712] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1712], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1711] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1711], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1710] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1710], "0001100000001011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1709] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1709], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1708] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1708], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1707] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1707], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1706] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1706], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1705] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1705], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1704] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1704], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1703] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1703], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1702] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1702], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1701] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1701], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1700] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1700], "1111100000000111", 0, 15);        
        
        //routine12
        this.insCommonResources.insCache.insMemory.Memory[1739] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1739], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1738] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1738], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1737] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1737], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1736] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1736], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1735] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1735], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1734] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1734], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1733] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1733], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1732] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1732], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1731] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1731], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1730] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1730], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1729] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1729], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1728] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1728], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1727] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1727], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1726] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1726], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1725] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1725], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1724] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1724], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1723] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1723], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1722] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1722], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1721] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1721], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1720] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1720], "1111100000000111", 0, 15);        
        
        //routine13
        this.insCommonResources.insCache.insMemory.Memory[1759] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1759], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1758] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1758], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1757] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1757], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1756] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1756], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1755] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1755], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1754] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1754], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1753] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1753], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1752] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1752], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1751] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1751], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1750] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1750], "0001100000001101", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1749] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1749], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1748] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1748], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1747] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1747], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1746] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1746], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1745] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1745], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1744] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1744], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1743] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1743], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1742] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1742], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1741] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1741], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1740] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1740], "1111100000000111", 0, 15);        
        
        //routine14
        this.insCommonResources.insCache.insMemory.Memory[1779] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1779], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1778] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1778], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1777] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1777], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1776] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1776], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1775] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1775], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1774] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1774], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1773] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1773], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1772] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1772], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1771] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1771], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1770] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1770], "0001100000001110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1769] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1769], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1768] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1768], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1767] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1767], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1766] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1766], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1765] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1765], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1764] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1764], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1763] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1763], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1762] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1762], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1761] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1761], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1760] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1760], "1111100000000111", 0, 15);        
        
        //routine15
        this.insCommonResources.insCache.insMemory.Memory[1799] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1799], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1798] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1798], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1797] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1797], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1796] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1796], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1795] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1795], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1794] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1794], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1793] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1793], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1792] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1792], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1791] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1791], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1790] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1790], "0001100000001111", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1789] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1789], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1788] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1788], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1787] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1787], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1786] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1786], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1785] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1785], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1784] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1784], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1783] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1783], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1782] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1782], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1781] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1781], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1780] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1780], "1111100000000111", 0, 15);        
        
        //routine16
        this.insCommonResources.insCache.insMemory.Memory[1819] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1819], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1818] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1818], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1817] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1817], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1816] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1816], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1815] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1815], "0001100000000011", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1814] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1814], "0001100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1813] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1813], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1812] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1812], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1811] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1811], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1810] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1810], "0001100000010000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1809] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1809], "1111100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1808] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1808], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1807] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1807], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1806] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1806], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1805] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1805], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1804] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1804], "0001100000010100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1803] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1803], "0001100000001100", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1802] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1802], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1801] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1801], "0000010000100000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1800] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1800], "1111100000000111", 0, 15);        
        
        //machine fault
        this.insCommonResources.insCache.insMemory.Memory[1829] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1829], "0000100000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1828] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1828], "0001010000000000", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1827] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1827], "0001100000011110", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1826] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1826], "0001100000000111", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1825] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1825], "1111100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1824] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1824], "0000100000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1823] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1823], "0001010000000001", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1822] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1822], "0001100000001010", 0, 15);
        this.insCommonResources.insCache.insMemory.Memory[1821] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1821], "1111100000000001", 0, 15);        
        this.insCommonResources.insCache.insMemory.Memory[1820] = this.insCommonResources.setStringToByte( this.insCommonResources.insCache.insMemory.Memory[1820], "0000000000000000", 0, 15);        
        
        
        //jButton7.doClick();
        RefreshPane();
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jTextField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField6ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
       // TODO add your handling code here:
        String pattern1  = "[01]{16}";
        String pattern2 = "[\\d]+";
        Pattern pat; 
        Matcher mat; 
        int cont2 = 0; 
        
        if(jTextField7.getText().isEmpty() || jTextField8.getText().isEmpty()) {
            this.AddContectToPaneForERROR("[ERROR]The value is NULL.\n");
            return;
        }
        
        byte[] br = new byte[16];
        String str = new String();
        
        str = jTextField7.getText();
        pat= Pattern.compile(pattern1);
        mat= pat.matcher(str);
        
        if( false == mat.matches()){
            this.AddContectToPaneForERROR("[ERROR]The value you set for memory is woring ,Plesae set the appropriate value.\n");
            this.AddContectToPaneForERROR("[Remider]The value is a 16-bits binary string with 0s or 1s \n");
            return;
         }
        
        pat= Pattern.compile(pattern2);
        mat= pat.matcher(jTextField8.getText());
        
        if(  mat.matches() == false) {
            this.AddContectToPaneForERROR("[ERROR]The value you set for location must be a number,Plesae set the appropriate value.\n");
            this.AddContectToPaneForERROR("[Remider]The value is decimal\n");
            return;
        }
        
        cont2 = Integer.parseInt(jTextField8.getText());
        if (cont2 < 0 || cont2 > 4096 ){
            this.AddContectToPaneForERROR("[ERROR]The value you set for location is below 0 or beyond 4096(which will casue overflow),Plesae set the appropriate value.\n");
            this.AddContectToPaneForERROR("[Remider]The value is decimal\n");
            return;
        }

        
 
        br = insCommonResources.setStringToByte(br, str, 0, 15);
        
        insCommonResources.setStorge(insCommonResources, br , cont2);
        
                
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField18ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField18ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String pattern = "[\\d]+";
        Pattern pat; 
        Matcher mat; 
        
        String str = new String();
        int context = 0;
        str = (String)jComboBox1.getSelectedItem();
        
        if(jTextField6.getText().isEmpty()) {
            this.AddContectToPaneForERROR("[ERROR]The value is NULL.\n");
            return;
        }
        
        pat= Pattern.compile(pattern);
        mat= pat.matcher(jTextField6.getText());
        
        if(  mat.matches() == false) {
            this.AddContectToPaneForERROR("[ERROR]The value you set for location must be a number,Plesae set the appropriate value.\n");
            this.AddContectToPaneForERROR("[Remider]The value is decimal\n");
            return;
        }
        
        context = Integer.parseInt(jTextField6.getText());
        
        if (context < 0 || context > 65535) {
            this.AddContectToPaneForERROR("[ERROR]The value you set for register is below 0 or beyond 65535,Plesae set the appropriate value.\n");
            this.AddContectToPaneForERROR("[Remider]The value is decimal\n");
            return;
        }

        
        switch(str)
        {
            case "R0" :
                insCommonResources.R0 = insCommonResources.setIntegerToByte(insCommonResources.R0, context);
                break;
            case "R1" :
                insCommonResources.R1 = insCommonResources.setIntegerToByte(insCommonResources.R1, context);
                break;
            case "R2" :
                insCommonResources.R2 = insCommonResources.setIntegerToByte(insCommonResources.R2, context);
                break;
            case "R3" :
                insCommonResources.R3 = insCommonResources.setIntegerToByte(insCommonResources.R3, context);
                break;
            case "PC" :
                insCommonResources.PC = insCommonResources.setIntegerToByte(insCommonResources.PC, context);
                break;
            case "X1" :
                insCommonResources.X1 = insCommonResources.setIntegerToByte(insCommonResources.X1, context);
                break;
            case "X2" :
                insCommonResources.X2 = insCommonResources.setIntegerToByte(insCommonResources.X2, context);
                break;
            case "X3" :
                insCommonResources.X3 = insCommonResources.setIntegerToByte(insCommonResources.X3, context);
                break;    
                
            default:
                break;
        }
        
        RefreshPane();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        this.dispose();
        UIInterface newUIInterface = new UIInterface();
        newUIInterface.setVisible(true);
        newUIInterface.setLocationRelativeTo(null);
        newUIInterface.jButton9.doClick();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextField11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField11ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField11ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        insExecuteInstructions.Execute(insCommonResources,true);

        jButton7.doClick();
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        CommonStr = jTextField1.getText();

        String pattern = "[a-zA-Z]{2,5} [\\d,]*[\\d]{1}";
        Pattern pat = Pattern.compile(pattern);
        Matcher mat;

        if(jTextField1.getText().isEmpty()) {
            this.AddContectToPaneForERROR("[ERROR]The value is NULL,please type in the command.\n");
            return;
        }

        mat = pat.matcher(CommonStr);
        if( mat.matches() == false && !CommonStr.equalsIgnoreCase("HLT")) {
            this.AddContectToPaneForERROR("[EncodeOpcode]"+ "The content:"+ CommonStr + " is not a valid instruction, discard.\n");
            jTextField1.setText(null);
            return;
        }

        AddContectToPane("Receive new instruction>>>",Color.white, false, 12);
        AddContectToPane(CommonStr + "\n",Color.white, true, 12);

        CommonBuffer.add(CommonStr);
        ShowCurrentInstructionsList();
        jTextField1.setText(null);

        jButton7.doClick();
        //AddContentIntojTextArea("Decode Opcode: "+ insCommonResources.opcode);
        //AddContentIntojTextArea("Decode Content: "+ insCommonResources.DisplayStrInStyles(2,insCommonResources.words));
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed
    
    /**
        * @description refresh the status on the Interface
        * @author Yitian Huang
        * @version 1.0
        * @since Sep 3
        * @edit record:
    */
    public void RefreshPane() {
            jButton7.doClick();
    }
    
    
    public void ExecuteClick() {
        this.jButton4.doClick();
    }
    /**
        * @description Append content in the text pane, with spcific format
        * @author Yitian Huang
        * @version 1.0
        * @since Sep 3
        * @param str the content you want to append
        * @param col the color
        * @param bold true-bold false-unbold
        * @param size the font size
        * @edit record:
    */
    public void AddContectToPane(String str, Color col, boolean bold, int size) {
        //set font style
        SimpleAttributeSet attrset = new SimpleAttributeSet();
        StyleConstants.setFontSize(attrset,size);
        StyleConstants.setBold(attrset, bold);
        StyleConstants.setForeground(attrset, col);
        StyleConstants.setFontFamily(attrset, "NSimSun");
;
        
        //set content   
        Document docs = jTextPane1.getDocument();
        try {
            docs.insertString(docs.getLength(), str, attrset);
            //this.jTextPane1.paintAll(this.jTextPane1.getGraphics());
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
        
        this.jTextPane1.setCaretPosition(jTextPane1.getStyledDocument().getLength());
        
    }
    
    public void AddContectToPane(String str) {
        AddContectToPane(str,Color.WHITE, false, 12);
    }
    
    //FOR TRACE LOG
    public void AddContectToPane(String str1, String str2) {
        AddContectToPane(str1,Color.WHITE, true, 12);
        AddContectToPane(str2,Color.WHITE, false, 12);
    }
    
    //for ERROR MESSAGE
    public void AddContectToPaneForERROR(String str) {
                //set font style
        SimpleAttributeSet attrset = new SimpleAttributeSet();
        StyleConstants.setFontSize(attrset,12);
        StyleConstants.setBold(attrset, false);
        StyleConstants.setForeground(attrset, Color.RED);
        StyleConstants.setFontFamily(attrset, "NSimSun");
;       StyleConstants.setBackground(attrset, Color.YELLOW);
        
        //set content   
        Document docs = jTextPane1.getDocument();
        try {
            docs.insertString(docs.getLength(), str, attrset);
            //this.jTextPane1.paintAll(this.jTextPane1.getGraphics());
        } catch (BadLocationException e) 
        {
            e.printStackTrace();
        }
        
        this.jTextPane1.setCaretPosition(jTextPane1.getStyledDocument().getLength());
        
    }
    
    //for user
    public void AddContectToPaneForUSER(String str) {
                //set font style
        SimpleAttributeSet attrset = new SimpleAttributeSet();
        StyleConstants.setFontSize(attrset,12);
        StyleConstants.setBold(attrset, false);
        StyleConstants.setForeground(attrset, Color.white);
        StyleConstants.setFontFamily(attrset, "NSimSun");
        
        //set content   
        Document docs = jTextPane2.getDocument();
        try {
            docs.insertString(docs.getLength(), str, attrset);
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
        
        this.jTextPane2.setCaretPosition(jTextPane2.getStyledDocument().getLength());
    }
    
    /**
        * @description Print the memory status in the text pane
        * @author Yitian Huang
        * @version 1.0
        * @since Sep 3
        * @edit record:
    */
    public void ShowStorge() {
        String temp = new String();
        
        AddContectToPane("---------------------------------------------------------------------------------------\n");
        AddContectToPane("-------                       Current Memory Monitor                            -------\n");
        AddContectToPane("---------------------------------------------------------------------------------------\n");
        
        for( int i = 0; i < 4096; i=i+4) {
            
            temp = String.format("%4d|",i);
            AddContectToPane(temp);
            for ( int j = 0; j < 16; j++) {
                AddContectToPane(Byte.toString(this.insCommonResources.insCache.insMemory.Memory[i][j]));
            }
            
            temp = String.format(" %4d|",i+1);
            AddContectToPane(temp);
            for (int j = 0; j < 16; j++) {
                AddContectToPane(Byte.toString(this.insCommonResources.insCache.insMemory.Memory[i+1][j]));
            }
            
            temp = String.format(" %4d|", i+2);
            AddContectToPane(temp);
            for ( int j = 0; j < 16; j++) {
                AddContectToPane(Byte.toString(this.insCommonResources.insCache.insMemory.Memory[i+2][j]));
            }
            
            temp = String.format(" %4d|", i+3);
            AddContectToPane(temp);
            for (int j = 0; j < 16; j++) {
                AddContectToPane(Byte.toString(this.insCommonResources.insCache.insMemory.Memory[i+3][j]));
            }
            
            AddContectToPane("\n");
        }
        
        AddContectToPane("---------------------------------------------------------------------------------------\n");
        AddContectToPane("-------                       Current Cache Monitor                             -------\n");
        AddContectToPane("---------------------------------------------------------------------------------------\n");
        
        CacheLine tmp;
        for(int i = 0; i < this.insCommonResources.insCache.insCache.size(); i++) {
            temp = String.format("%2d|", i);
            AddContectToPane(temp);
            
            tmp = (CacheLine)this.insCommonResources.insCache.insCache.get(i);
            
            for ( int j = 0; j < 8; j++) {
                temp = String.format("%d", tmp.tag[j]);
                AddContectToPane(temp);
            }
            
            AddContectToPane(" ");
            for ( int j = 0; j < 4; j++) {
                temp = String.format("%d", tmp.words[j]);
                AddContectToPane(temp);
            }
            
            AddContectToPane(" ");
            for ( int j = 0; j < 16; j++) {
                 if (j == 4 || j ==8 || j == 12) {
                    AddContectToPane("\n                 ");
                 }
                
                 for ( int m = 0; m < 16; m++) {
                    temp = String.format("%d", tmp.content[j][m]);
                    AddContectToPane(temp);
                 }
                 AddContectToPane(" ");
                 
                
            }
            
            AddContectToPane("\n");
        }

    }
    
    /**
        * @description show all the Instrctions listed in the List
        * @author Yitian Huang
        * @version 1.0
        * @since Sep 3
        * @edit record:
    */
    public void ShowCurrentInstructionsList() {
        AddContectToPane("Current Instructions Sequences:\n",Color.white, false, 12);
        
        if(CommonBuffer.size() == 0) {
            AddContectToPane("There are no instructions in sequence.\n",Color.white, true, 12);
            return;
        }
        
        for(int i = 0; i < CommonBuffer.size(); i++) {
            AddContectToPane("<" + i + "> " + CommonBuffer.get(i) + "\n" ,Color.white, true, 12);
        }
    }
    
    public String InputAChar() {
        String res = new String();
        res = JOptionPane.showInputDialog("Please input a word");
        return res;
    }
    
    /**
        * @description Make all buttons in UI disabled.
        * @author Zhe Yang
        * @version 1.0
        * @since Nov 4
        * @edit record:
    */
    public void SetAllButtonsDisabled() {
        jButton1.setEnabled(false);
        jButton2.setEnabled(false);
        jButton3.setEnabled(false);
        jButton4.setEnabled(false);
        jButton5.setEnabled(false);
        jButton6.setEnabled(false);
        jButton7.setEnabled(false);
        jButton8.setEnabled(true);
        jButton9.setEnabled(false);
        jButton10.setEnabled(false);
        jButton11.setEnabled(false);
        jButton18.setEnabled(false);
        jButton19.setEnabled(false);
        
    }
    
//initialization
public CommonResources insCommonResources;
public EncodeInstructions insDecodeInstructions;
public ExecuteInstructions insExecuteInstructions;
public String CommonStr;
public List CommonBuffer;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JLayeredPane jLayeredPane4;
    private javax.swing.JLayeredPane jLayeredPane5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField11;
    private javax.swing.JTextField jTextField12;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField14;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField20;
    private javax.swing.JTextField jTextField21;
    private javax.swing.JTextField jTextField22;
    private javax.swing.JTextField jTextField23;
    private javax.swing.JTextField jTextField24;
    private javax.swing.JTextField jTextField25;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}


